@using CSharpFinalProject.Authentication
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider;
@inject NavigationManager navManager;

<PageTitle>CSharpFinalProject</PageTitle>

@* <div class="page"> *@
<RadzenLayout>
    <RadzenHeader>
        <RadzenRow JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center" Gap="0">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)"/>
                <RadzenLabel Text="Grades System"/>
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10">
                <AuthorizeView>
                    <Authorized>
                        <RadzenLabel Text="@context.User.Identity.Name"></RadzenLabel>
                        <RadzenLink Path="logout" Text="Logout" class="rz-mr-5"></RadzenLink>
                    </Authorized>
                    <NotAuthorized>
                        <RadzenLabel Text="Hello Guest"></RadzenLabel>
                        <RadzenLink Path="login" Text="Login" class="rz-mr-5"></RadzenLink>
                    </NotAuthorized>
                </AuthorizeView>
            </RadzenStack>
        </RadzenRow>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebarExpanded">
        <NavMenu/>
        @* <RadzenPanelMenu> *@
        @*     <RadzenPanelMenuItem Text="Home" Icon="home"/> *@
        @*     <RadzenPanelMenuItem Text="Users" Icon="account_box"/> *@
        @* </RadzenPanelMenu> *@
        @* <div class="rz-p-4"> *@
        @*     Sidebar *@
        @* </div> *@
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
    <RadzenFooter>
        Footer
    </RadzenFooter>
</RadzenLayout>
@* <div class="sidebar"> *@
@*     <NavMenu/> *@
@* </div> *@
@* *@
@* <a>Test</a> *@
@* *@
@* <main> *@
@*     <div class="top-row px-4"> *@
@*         <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a> *@
@*         <AuthorizeView> *@
@*             <Authorized> *@
@*                 <a @onclick=@Logout>Logout</a> *@
@*             </Authorized> *@
@*             <NotAuthorized> *@
@*                 <a href="/login">Login</a> *@
@*             </NotAuthorized> *@
@*         </AuthorizeView> *@
@*     </div> *@
@* *@
@*     <article class="content px-4"> *@
@*         @Body *@
@*     </article> *@
@* </main> *@
@* </div> *@

@code {

    bool sidebarExpanded = false;

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }

}
